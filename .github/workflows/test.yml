name: test

on:
  push:
    branches:
      - "*"

jobs:
  test:
    name: regression test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        pgbranch:
          - master
          - REL_13_STABLE
          - REL_12_STABLE
    env:
      PGBRANCH: ${{ matrix.pgbranch }}
    steps:
    - uses: actions/checkout@v2
    - name: set_env
      run: |
        echo "PGHOME=${HOME}/${PGBRANCH}" >> $GITHUB_ENV
        echo "PGDATA=${HOME}/pgdata" >> $GITHUB_ENV
    - name: add_path
      run: |
        echo "${PGHOME}/bin" >> $GITHUB_PATH
    - name: before_install
      run: |
        git clone https://github.com/postgres/postgres.git
        cd postgres
        git checkout ${PGBRANCH}
        ./configure --prefix=${PGHOME} --enable-debug --enable-cassert
        make -j 2 -s
        make -s install
        cd contrib/pageinspect
        make -s install
        cd ../..
        initdb -D ${PGDATA} -k --locale=C --encoding=UTF8
        pg_ctl -D ${PGDATA} -w start
        psql -d postgres -c "ALTER SYSTEM SET synchronous_commit TO off"
        pg_ctl -D ${PGDATA} reload
        make -s -j 2 installcheck
    - name: before_script
      run: |
        cd ${GITHUB_WORKSPACE}
        make USE_PGXS=1 PG_CONFIG=${PGHOME}/bin/pg_config
        make USE_PGXS=1 PG_CONFIG=${PGHOME}/bin/pg_config install
    - name: script
      run: |
        mkdir -p ${PGHOME}/testts
        psql regression -c "CREATE TABLESPACE testts LOCATION '${PGHOME}/testts'"
        pgbench -i -Idtgv -s 100 --tablespace=testts regression
        psql regression -f sql/func.sql
        pg_ctl -D ${PGDATA} stop
        pg_reset_page_lsn -D ${PGDATA}/base -l 0/1 --no-sync -k -P
        pg_reset_page_lsn -D ${PGDATA}/global -l 0/1 -k
        pg_reset_page_lsn -D ${PGDATA}/pg_tblspc -l 0/1 -k
        pg_checksums -D ${PGDATA} -c
        pg_ctl -D ${PGDATA} -w start
        psql regression -c "SELECT verify_page_lsn('0/1')"
        pgbench -c 2 -j 2 -T 10 regression
        pg_ctl -D ${PGDATA} stop
        pg_reset_page_lsn -D ${PGDATA} -l 0/9 -k -P
        pg_checksums -D ${PGDATA} -c
        pg_ctl -D ${PGDATA} -w start
        psql regression -c "SELECT verify_page_lsn('0/9')"
        pgbench -c 2 -j 2 -T 10 regression
        pg_ctl -D ${PGDATA} stop
    - name: after_script_failure
      if: failure()
      run: |
        exit 1
    - name: after_script_success
      if: success()
      run: |
        echo "SUCCESS"
